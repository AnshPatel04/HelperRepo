https://drive.google.com/file/d/1d8OUOQv8qDYkxw-5z5GVSVDC2unIUXV4/view


https://widgetwisdom.com/adding-admob-ads-to-a-flutter-app/


// 1 Sec
void showInterstitialAdWithLoader(BuildContext context) async {
  if (interstitialAd != null) {
    // Show loading dialog
    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (_) => const Center(child: CircularProgressIndicator()),
    );

    // Wait for at least 1 second
    await Future.delayed(const Duration(seconds: 1));

    // Close loading dialog
    Navigator.of(context).pop();

    // Show the ad
    interstitialAd!.fullScreenContentCallback = FullScreenContentCallback(
      onAdDismissedFullScreenContent: (ad) {
        ad.dispose();
        loadInterstitialAd(); // Reload after dismiss
      },
      onAdFailedToShowFullScreenContent: (ad, error) {
        ad.dispose();
        loadInterstitialAd();
      },
    );

    interstitialAd!.show();
    interstitialAd = null;
  } else {
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(content: Text('Ad is not ready yet. Please try again.')),
    );
  }
}

///------

// till ads

void showInterstitialAdWithLoader(BuildContext context) async {
  if (interstitialAd != null) {
    // Show the loader dialog
    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (_) => const Center(child: CircularProgressIndicator()),
    );

    bool loaderClosed = false;

    interstitialAd!.fullScreenContentCallback = FullScreenContentCallback(
      onAdShowedFullScreenContent: (ad) {
        if (!loaderClosed) {
          Navigator.of(context).pop(); // Close the loader
          loaderClosed = true;
        }
      },
      onAdDismissedFullScreenContent: (ad) {
        ad.dispose();
        loadInterstitialAd();
      },
      onAdFailedToShowFullScreenContent: (ad, error) {
        ad.dispose();
        if (!loaderClosed) {
          Navigator.of(context).pop(); // Close the loader
          loaderClosed = true;
        }
        loadInterstitialAd();
      },
    );

    // Ensure loader is shown for at least 1 second
    await Future.delayed(const Duration(seconds: 1));
    interstitialAd!.show();
    interstitialAd = null;
  } else {
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(content: Text('Ad is not ready yet. Please try again.')),
    );
  }
}
